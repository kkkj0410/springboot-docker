#version: '3'

#services:
#  backend:
#    build:
#      context: .
#      dockerfile: ./backend/Dockerfile
#    expose:
#      - 8080
#    network_mode: "host"
#    volumes:
#      - ./build/libs/:/backend/
#    restart: always
#    stdin_open: true
#    tty: true

#services:
#  app:
#    build:
#      context: .
#      args:
#        - DEV=true
#    ports:
#      - '8000:8000'
#    volumes:
#      - ./app:/app
#
#
#  backend:
#    build:
#      context: .
#      dockerfile: ./backend/Dockerfile
#    expose:
#      - 8080
#    network_mode: "host"
#    volumes:
#      - ./build/libs/:/backend/
#    restart: always
#    stdin_open: true
#    tty: true

#services:
#  backend:
#    build:
#      context: .
#      dockerfile: ./backend/Dockerfile
#    ports:
#      - "8080:8080"
#    networks:
#      - my_network
#    volumes:
#      - ./build/libs/:/backend/
#    restart: always
#    stdin_open: true
#    tty: true
#
#networks:
#  my_network:
#    driver: bridge




version: '3'

services:
  db:
    image: mysql:8.0.32
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: spring
      MYSQL_USER: root
      MYSQL_PASSWORD: 1234
    networks:
      - springboot-mysql

  server:
    image: demo-test:0.0.1
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/spring?autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
    networks:
      - springboot-mysql

networks:
  springboot-mysql: